#!/usr/bin/env python

import os
import sys
import logging.config
import logging.handlers
from pathlib import Path
import yaml

__version__ = '0.0.0'
logger = logging.getLogger(__name__)

if __name__ == "__main__":
    if sys.version_info[0] < 3:
        raise RuntimeError("This program requires the Python 3 interpreter")
    else:
        _prj = Path.cwd().parents[0]
        sys.path.append(str(_prj))
        sys.path.append(os.path.join(str(_prj), 'smores'))
        _config = _prj.joinpath('smores','config')
        cache_base = _prj.joinpath('smores','cache')
        _logconfig = _config.joinpath('logging.yaml')
        _metapath = _config.joinpath('_metadata.py')
        _meta = {}
        if _logconfig.exists():
            with open(_logconfig, 'rt') as f:
                config = yaml.load(f.read(), Loader=yaml.FullLoader)
            logging.config.dictConfig(config)

        try:
            with _metapath.open() as _metafile:
                exec(_metafile.read(), globals(), _meta)
                __version__ = _meta['version']
        except EnvironmentError:
            raise RuntimeError("if %s.py exists, it is required to be well-formed" % (_metapath,))
        else:
            from smores.smoresCLI import smoresCLI
            root = logging.getLogger()
            console = logging.getLogger(__name__)
            console.debug('Python version ' + sys.version)
            smoresCLI(_meta).cmdloop()
